version: '3.8'
services:
  service:
    build: .
    container_name: service
    hostname: service
    ports:
      - 3000:3000
    networks:
      - app-network
    volumes:
      - ./src/:/app/src/
      - .env/:/app/.env
    restart: unless-stopped
    depends_on: 
      - ackDatabase
  mongo1:
    container_name: mongo1
    hostname: mongo1
    image: mongo
    ports:
      - 30001:27017 
    restart: always
    networks:
      - app-network
    volumes:
      - dbdata1:/data/db
    command: mongod --bind_ip_all --replSet rs0

  mongo2:
    container_name: mongo2
    hostname: mongo2
    image: mongo
    ports:
      - 30002:27017
    networks:
      - app-network
    restart: always
    volumes:
      - dbdata2:/data/db
    command: mongod --bind_ip_all --replSet rs0

  mongo3:
    container_name: mongo3
    hostname: mongo3
    image: mongo
    ports:
      - 30003:27017
    networks:
      - app-network
    restart: always
    volumes:
      - dbdata3:/data/db
    command: mongod --bind_ip_all --replSet rs0

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    networks:
      - app-network
    ports:
      - 2181:2181
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: unless-stopped
    volumes:
      - zookeeperdata:/bitnami:z
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    links:
      - zookeeper
    networks:
      - app-network
    ports:
      - 9092:9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_DELETE_TOPIC_ENABLE=false
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_ADVERTISED_PORT=9092
    depends_on:
      - zookeeper
    restart: unless-stopped
    volumes:
      - kafkadata:/bitnami:z
networks:
  app-network:
    name: app-network
    driver: bridge
volumes:
  kafkadata:
  zookeeperdata:
  dbdata1:
  dbdata2:
  dbdata3:
